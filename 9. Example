The problem dealt with here is as follows:
A node number_publisher will publish the topic Number which will be of std_msgs/Int64 type.
A node number counter will the subscriber to this topic and then publish on a topic number_counter , the counter which gives the sum of the msgs


***********************************************************SOLUTION*************************************************************

*********************************number_radio (Publisher):

#!/usr/bin/env python
import rospy
from std_msgs.msg import Int64

if __name__ == '__main__':

    rospy.init_node('number_radio')
    pub = rospy.Publisher("/Number", Int64, queue_size = 10)
    rate = rospy.Rate(2)

    while not rospy.is_shutdown():
        msg = Int64()
        msg.data = 2
        pub.publish(msg)
        rate.sleep()
        
********************************number_rec(Subscriber and publisher):

#!/usr/bin/env python
import rospy
from std_msgs.msg import Int64

counter = 0
pub = None

def callback_receive_radio_data(msg):
    global counter
    rospy.loginfo("message received:")
    rospy.loginfo(msg)
    counter += msg.data
    new_msg = Int64()
    new_msg.data = counter
    pub.publish(new_msg)


if __name__ == '__main__':

    rospy.init_node('number_rec', anonymous=True)
    sub = rospy.Subscriber("/Number",Int64, callback_receive_radio_data)

    pub = rospy.Publisher("/num_count", Int64, queue_size=10)
    rospy.spin()

***************************************************************OUTPUT

$rostopic echo /number_radio
data: 2
---
data: 2
---
data: 2
---
data: 2
---

$rosrun my_robot_tutorials number_rec.py
[INFO] [1583864197.733524]: message recieved:
[INFO] [1583864197.734858]: data: 2
[INFO] [1583864198.235464]: message recieved:
[INFO] [1583864198.237206]: data: 2
[INFO] [1583864198.732539]: message recieved:
[INFO] [1583864198.734178]: data: 2
[INFO] [1583864199.233544]: message recieved:
[INFO] [1583864199.235034]: data: 2

~$ rostopic list
/Number
/num_count
/rosout
/rosout_agg

~$ rostopic echo /num_count

data: 22
---
data: 24
---
data: 26
---
data: 28
---
data: 30











